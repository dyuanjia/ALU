module adder (
    input a [16],    // 16bit input
    input b [16],    // 16bit input
    output out [16], // 16 bit output
    output z,
    output v,
    output n,
    input alufn[7]   //alufn0 input to indicate subtract
  ) {
  
  sig msbout[16];
  sig xb[16];

  always {
    if (alufn[0]==0){  //ADD
      xb = $signed(b);
      msbout = $signed(a)+$signed(xb);
    }
    else{              //SUBTRACT
      xb = ~b;
      msbout = $signed(a)+$signed(xb) + 1;
    }
    
    if (msbout == 0){  //output all 0
        z = 1;
    }
    else{                   //output sum not all 0
      z = 0;
    }
    
    if (msbout[15] == 1){   //negative output
      n=1;
    }
    else{                   //positive output
      n=0;
    }
    
    if ((msbout[15]==1 && a[15]==0 && xb[15]==0) || (msbout[15]==0 && a[15] == 1 && xb[15]==1)){   //overflow
      v=1;
    }
    else{                   //no overflow
      v=0;
    }
    
    out = msbout[15:0];   //sum output
  }
}
